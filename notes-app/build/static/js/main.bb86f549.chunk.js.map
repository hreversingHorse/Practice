{"version":3,"sources":["components/Note.js","servises/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","servises_notes","axios","get","then","response","data","newObject","post","id","put","BASE_URL","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","setErrorMessage","useEffect","noteService","initNotes","notesToShow","filter","map","components_Note","key","find","changedNote","objectSpread","updatedNote","catch","error","setTimeout","n","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","createdNote","concat","value","onChange","console","log","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bb86f549.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({note, toggleImportance}) => {\n    const label = note.important ? 'make not important' : 'make important'\n    \n    \n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>\n                {label}\n            </button>\n        </li>\n    )\n}\n\nexport default Note;","import axios from 'axios'\nconst BASE_URL = '/api/notes'\n\nconst getAll = () => {\n    return axios\n        .get(BASE_URL)\n        .then(response => response.data)\n}\n\nconst create = newObject => {\n    return axios\n        .post(BASE_URL,newObject)\n        .then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    return axios\n        .put(BASE_URL+'/'+id, newObject)\n        .then(response => response.data)\n}\n\nexport default {getAll,create,update}\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './servises/notes'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happend...')\n\n  const hook = () => {\n    noteService\n      .getAll()\n      .then(initNotes => {\n        setNotes(initNotes)\n      })\n  }\n\n  useEffect(hook,[])\n\n  const notesToShow = showAll \n  ? notes \n  : notes.filter(note => note.important === true)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n        content: newNote, \n        date: new Date().toISOString(),\n        important: Math.random() > 0.5\n    }\n\n    noteService.create(noteObject).then(createdNote => {\n      setNotes(notes.concat(createdNote))\n      setNewNote('')\n    })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(note => {\n      if (note.id === id){\n        return (note)\n      }\n    })\n\n    const changedNote = {...note, important: !note.important}\n    \n    noteService.update(id,changedNote)\n      .then(updatedNote => {\n        setNotes(notes.map(note => {\n          if (note.id !== id){\n            return note\n          } else {\n            return updatedNote\n          }\n        }))\n      })\n      .catch(error => {\n        setErrorMessage(\n          'Note' + note.content + 'was already removed from server'\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        },5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n\n  }\n\n  const rows = () => notesToShow.map(note => \n    <Note\n        key={note.id}\n        note={note}\n        toggleImportance={() => toggleImportanceOf(note.id)}\n        />\n    )\n\n  return (\n    <div>\n        <h1>Notes</h1>\n\n\n        <div>\n            <button onClick={() => setShowAll(!showAll)}>\n                show {showAll ? 'important' : 'all'}\n            </button>\n        </div>\n        <ul>\n            {rows()}\n        </ul>\n        <form onSubmit={addNote}>\n            <input \n            value={newNote}\n            onChange={handleNoteChange}/>\n            <button type='submit'>save</button>\n        </form>\n    </div>\n  )\n\n\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios';\n\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}